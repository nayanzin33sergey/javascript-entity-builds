{"version":3,"file":"entity.es5.js","sources":["../../../modules/entity/index.ts","../../../modules/entity/src/create_adapter.ts","../../../modules/entity/src/sorted_state_adapter.ts","../../../modules/entity/src/unsorted_state_adapter.ts","../../../modules/entity/src/state_adapter.ts","../../../modules/entity/src/state_selectors.ts","../../../modules/entity/src/entity_state.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {createEntityAdapter,EntityState,EntityAdapter} from './public_api';\n","import { createSelector } from '@ngrx/store';\nimport {\n  EntityDefinition,\n  Comparer,\n  IdSelector,\n  EntityAdapter,\n} from './models';\nimport { createInitialStateFactory } from './entity_state';\nimport { createSelectorsFactory } from './state_selectors';\nimport { createSortedStateAdapter } from './sorted_state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nexport function createEntityAdapter<T>(\n  options: {\n    selectId?: IdSelector<T>;\n    sortComparer?: false | Comparer<T>;\n  } = {}\n): EntityAdapter<T> {\n  const { selectId, sortComparer }: EntityDefinition<T> = {\n    sortComparer: false,\n    selectId: (instance: any) => instance.id,\n    ...options,\n  };\n\n  const /** @type {?} */ stateFactory = createInitialStateFactory<T>();\n  const /** @type {?} */ selectorsFactory = createSelectorsFactory<T>();\n  const /** @type {?} */ stateAdapter = sortComparer\n    ? createSortedStateAdapter(selectId, sortComparer)\n    : createUnsortedStateAdapter(selectId);\n\n  return {\n    ...stateFactory,\n    ...selectorsFactory,\n    ...stateAdapter,\n  };\n}\n","import {\n  EntityState,\n  IdSelector,\n  Comparer,\n  Dictionary,\n  EntityStateAdapter,\n  Update,\n} from './models';\nimport { createStateOperator } from './state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nexport function createSortedStateAdapter<T>(\n  selectId: IdSelector<T>,\n  sort: Comparer<T>\n): EntityStateAdapter<T> {\n  type R = EntityState<T>;\n\n  const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(\n    selectId\n  );\n/**\n * @param {?} entity\n * @param {?} state\n * @return {?}\n */\nfunction addOneMutably(entity: T, state: R): boolean {\n    return addManyMutably([entity], state);\n  }\n/**\n * @param {?} newModels\n * @param {?} state\n * @return {?}\n */\nfunction addManyMutably(newModels: T[], state: R): boolean {\n    const /** @type {?} */ models = newModels.filter(\n      model => !(selectId(model) in state.entities)\n    );\n\n    return merge(models, state);\n  }\n/**\n * @param {?} models\n * @param {?} state\n * @return {?}\n */\nfunction addAllMutably(models: T[], state: R): boolean {\n    state.entities = {};\n    state.ids = [];\n\n    addManyMutably(models, state);\n\n    return true;\n  }\n/**\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction updateOneMutably(update: Update<T>, state: R): boolean {\n    return updateManyMutably([update], state);\n  }\n/**\n * @param {?} models\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction takeUpdatedModel(models: T[], update: Update<T>, state: R): void {\n    if (!(update.id in state.entities)) {\n      return;\n    }\n\n    const /** @type {?} */ original = state.entities[update.id];\n    const /** @type {?} */ updated = Object.assign({}, original, update.changes);\n\n    delete state.entities[update.id];\n\n    models.push(updated);\n  }\n/**\n * @param {?} updates\n * @param {?} state\n * @return {?}\n */\nfunction updateManyMutably(updates: Update<T>[], state: R): boolean {\n    const /** @type {?} */ models: T[] = [];\n\n    updates.forEach(update => takeUpdatedModel(models, update, state));\n\n    if (models.length) {\n      state.ids = state.ids.filter(id => id in state.entities);\n    }\n\n    return merge(models, state);\n  }\n/**\n * @param {?} models\n * @param {?} state\n * @return {?}\n */\nfunction merge(models: T[], state: R): boolean {\n    if (models.length === 0) {\n      return false;\n    }\n\n    models.sort(sort);\n\n    const /** @type {?} */ ids: string[] = [];\n\n    let /** @type {?} */ i = 0;\n    let /** @type {?} */ j = 0;\n\n    while (i < models.length && j < state.ids.length) {\n      const /** @type {?} */ model = models[i];\n      const /** @type {?} */ modelId = selectId(model);\n      const /** @type {?} */ entityId = state.ids[j];\n      const /** @type {?} */ entity = state.entities[entityId];\n\n      if (sort(model, entity) <= 0) {\n        ids.push(modelId);\n        i++;\n      } else {\n        ids.push(entityId);\n        j++;\n      }\n    }\n\n    if (i < models.length) {\n      state.ids = ids.concat(models.slice(i).map(selectId));\n    } else {\n      state.ids = ids.concat(state.ids.slice(j));\n    }\n\n    models.forEach((model, i) => {\n      state.entities[selectId(model)] = model;\n    });\n\n    return true;\n  }\n\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    addAll: createStateOperator(addAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter, IdSelector, Update } from './models';\nimport { createStateOperator } from './state_adapter';\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nexport function createUnsortedStateAdapter<T>(\n  selectId: IdSelector<T>\n): EntityStateAdapter<T> {\n  type R = EntityState<T>;\n/**\n * @param {?} entity\n * @param {?} state\n * @return {?}\n */\nfunction addOneMutably(entity: T, state: R): boolean {\n    const /** @type {?} */ key = selectId(entity);\n\n    if (key in state.entities) {\n      return false;\n    }\n\n    state.ids.push(key);\n    state.entities[key] = entity;\n\n    return true;\n  }\n/**\n * @param {?} entities\n * @param {?} state\n * @return {?}\n */\nfunction addManyMutably(entities: T[], state: R): boolean {\n    let /** @type {?} */ didMutate = false;\n\n    for (let /** @type {?} */ index in entities) {\n      didMutate = addOneMutably(entities[index], state) || didMutate;\n    }\n\n    return didMutate;\n  }\n/**\n * @param {?} entities\n * @param {?} state\n * @return {?}\n */\nfunction addAllMutably(entities: T[], state: R): boolean {\n    state.ids = [];\n    state.entities = {};\n\n    addManyMutably(entities, state);\n\n    return true;\n  }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\nfunction removeOneMutably(key: string, state: R): boolean {\n    return removeManyMutably([key], state);\n  }\n/**\n * @param {?} keys\n * @param {?} state\n * @return {?}\n */\nfunction removeManyMutably(keys: string[], state: R): boolean {\n    const /** @type {?} */ didMutate =\n      keys\n        .filter(key => key in state.entities)\n        .map(key => delete state.entities[key]).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.filter(id => id in state.entities);\n    }\n\n    return didMutate;\n  }\n/**\n * @template S\n * @param {?} state\n * @return {?}\n */\nfunction removeAll<S extends R>(state: S): S {\n    return Object.assign({}, state, {\n      ids: [],\n      entities: {},\n    });\n  }\n/**\n * @param {?} keys\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction takeNewKey(\n    keys: { [id: string]: string },\n    update: Update<T>,\n    state: R\n  ): void {\n    const /** @type {?} */ original = state.entities[update.id];\n    const /** @type {?} */ updated: T = Object.assign({}, original, update.changes);\n    const /** @type {?} */ newKey = selectId(updated);\n\n    if (newKey !== update.id) {\n      keys[update.id] = newKey;\n      delete state.entities[update.id];\n    }\n\n    state.entities[newKey] = updated;\n  }\n/**\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction updateOneMutably(update: Update<T>, state: R): boolean {\n    return updateManyMutably([update], state);\n  }\n/**\n * @param {?} updates\n * @param {?} state\n * @return {?}\n */\nfunction updateManyMutably(updates: Update<T>[], state: R): boolean {\n    const /** @type {?} */ newKeys: { [id: string]: string } = {};\n\n    const /** @type {?} */ didMutate =\n      updates\n        .filter(update => update.id in state.entities)\n        .map(update => takeNewKey(newKeys, update, state)).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.map(id => newKeys[id] || id);\n    }\n\n    return didMutate;\n  }\n\n  return {\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    addAll: createStateOperator(addAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter } from './models';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nexport function createStateOperator<V, R>(\n  mutator: (arg: R, state: EntityState<V>) => boolean\n) {\n  return function operation<S extends EntityState<V>>(arg: R, state: S): S {\n    const /** @type {?} */ clonedEntityState: EntityState<V> = {\n      ids: [...state.ids],\n      entities: { ...state.entities },\n    };\n\n    const /** @type {?} */ didMutate = mutator(arg, clonedEntityState);\n\n    if (didMutate) {\n      return Object.assign({}, state, clonedEntityState);\n    }\n\n    return state;\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { EntityState, EntitySelectors } from './models';\n/**\n * @template T\n * @return {?}\n */\nexport function createSelectorsFactory<T>() {\n  return {\n/**\n * @template V\n * @param {?} selectState\n * @return {?}\n */\ngetSelectors<V>(\n      selectState: (state: V) => EntityState<T>\n    ): EntitySelectors<T, V> {\n      const /** @type {?} */ selectIds = (state: EntityState<T>) => state.ids;\n      const /** @type {?} */ selectEntities = (state: EntityState<T>) => state.entities;\n      const /** @type {?} */ selectAll = createSelector(\n        selectIds,\n        selectEntities,\n        (ids, entities) => ids.map(id => entities[id])\n      );\n\n      const /** @type {?} */ selectTotal = createSelector(selectIds, ids => ids.length);\n\n      return {\n        selectIds: createSelector(selectState, selectIds),\n        selectEntities: createSelector(selectState, selectEntities),\n        selectAll: createSelector(selectState, selectAll),\n        selectTotal: createSelector(selectState, selectTotal),\n      };\n    },\n  };\n}\n","import { EntityState } from './models';\n/**\n * @template V\n * @return {?}\n */\nexport function getInitialEntityState<V>(): EntityState<V> {\n  return {\n    ids: [],\n    entities: {},\n  };\n}\n/**\n * @template V\n * @return {?}\n */\nexport function createInitialStateFactory<V>() {\n  function getInitialState(): EntityState<V>;\n  function getInitialState<S extends object>(\n    additionalState: S\n  ): EntityState<V> & S;\n/**\n * @param {?=} additionalState\n * @return {?}\n */\nfunction getInitialState(additionalState: any = {}): any {\n    return Object.assign(getInitialEntityState(), additionalState);\n  }\n\n  return { getInitialState };\n}\n"],"names":[],"mappings":"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"}