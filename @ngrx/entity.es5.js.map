{"version":3,"file":"entity.es5.js","sources":["../../../modules/entity/index.ts","../../../modules/entity/src/create_adapter.ts","../../../modules/entity/src/sorted_state_adapter.ts","../../../modules/entity/src/unsorted_state_adapter.ts","../../../modules/entity/src/state_adapter.ts","../../../modules/entity/src/state_selectors.ts","../../../modules/entity/src/entity_state.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {createEntityAdapter,EntityState,EntityAdapter} from './public_api';\n","import { createSelector } from '@ngrx/store';\nimport {\n  EntityDefinition,\n  Comparer,\n  IdSelector,\n  EntityAdapter,\n} from './models';\nimport { createInitialStateFactory } from './entity_state';\nimport { createSelectorsFactory } from './state_selectors';\nimport { createSortedStateAdapter } from './sorted_state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n/**\n * @template T\n * @param {?} options\n * @return {?}\n */\nexport function createEntityAdapter<T>(options: {\n  selectId: IdSelector<T>;\n  sort?: false | Comparer<T>;\n}): EntityAdapter<T> {\n  const { selectId, sort }: EntityDefinition<T> = { sort: false, ...options };\n\n  const /** @type {?} */ stateFactory = createInitialStateFactory<T>();\n  const /** @type {?} */ selectorsFactory = createSelectorsFactory<T>();\n  const /** @type {?} */ stateAdapter = sort\n    ? createSortedStateAdapter(selectId, sort)\n    : createUnsortedStateAdapter(selectId);\n\n  return {\n    ...stateFactory,\n    ...selectorsFactory,\n    ...stateAdapter,\n  };\n}\n","import {\n  EntityState,\n  IdSelector,\n  Comparer,\n  Dictionary,\n  EntityStateAdapter,\n  Update,\n} from './models';\nimport { createStateOperator } from './state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nexport function createSortedStateAdapter<T>(\n  selectId: IdSelector<T>,\n  sort: Comparer<T>\n): EntityStateAdapter<T> {\n  type R = EntityState<T>;\n\n  const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(\n    selectId\n  );\n/**\n * @param {?} entity\n * @param {?} state\n * @return {?}\n */\nfunction addOneMutably(entity: T, state: R): void {\n    const /** @type {?} */ key = selectId(entity);\n    const /** @type {?} */ index = state.ids.indexOf(key);\n\n    if (index !== -1) {\n      return;\n    }\n\n    const /** @type {?} */ insertAt = findTargetIndex(state, entity);\n    state.ids.splice(insertAt, 0, key);\n    state.entities[key] = entity;\n  }\n/**\n * @param {?} newModels\n * @param {?} state\n * @return {?}\n */\nfunction addManyMutably(newModels: T[], state: R): void {\n    for (let /** @type {?} */ index in newModels) {\n      addOneMutably(newModels[index], state);\n    }\n  }\n/**\n * @param {?} models\n * @param {?} state\n * @return {?}\n */\nfunction addAllMutably(models: T[], state: R): void {\n    const /** @type {?} */ sortedModels = models.sort(sort);\n\n    state.entities = {};\n    state.ids = sortedModels.map(model => {\n      const /** @type {?} */ id = selectId(model);\n      state.entities[id] = model;\n      return id;\n    });\n  }\n/**\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction updateOneMutably(update: Update<T>, state: R): void {\n    const /** @type {?} */ index = state.ids.indexOf(update.id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const /** @type {?} */ original = state.entities[update.id];\n    const /** @type {?} */ updated: T = Object.assign({}, original, update.changes);\n    const /** @type {?} */ updatedKey = selectId(updated);\n    const /** @type {?} */ result = sort(original, updated);\n\n    if (result === 0) {\n      if (updatedKey !== update.id) {\n        delete state.entities[update.id];\n        state.ids[index] = updatedKey;\n      }\n\n      state.entities[updatedKey] = updated;\n\n      return;\n    }\n\n    state.ids.splice(index, 1);\n    state.ids.splice(findTargetIndex(state, updated), 0, updatedKey);\n\n    if (updatedKey !== update.id) {\n      delete state.entities[update.id];\n    }\n\n    state.entities[updatedKey] = updated;\n  }\n/**\n * @param {?} updates\n * @param {?} state\n * @return {?}\n */\nfunction updateManyMutably(updates: Update<T>[], state: R): void {\n    for (let /** @type {?} */ index in updates) {\n      updateOneMutably(updates[index], state);\n    }\n  }\n/**\n * @param {?} state\n * @param {?} model\n * @param {?=} left\n * @param {?=} right\n * @return {?}\n */\nfunction findTargetIndex(\n    state: R,\n    model: T,\n    left = 0,\n    right = state.ids.length - 1\n  ) {\n    if (right === -1) {\n      return 0;\n    }\n\n    let /** @type {?} */ middle: number;\n\n    while (true) {\n      middle = Math.floor((left + right) / 2);\n\n      const /** @type {?} */ result = sort(state.entities[state.ids[middle]], model);\n\n      if (result === 0) {\n        return middle;\n      } else if (result < 0) {\n        left = middle + 1;\n      } else {\n        right = middle - 1;\n      }\n\n      if (left > right) {\n        return state.ids.length - 1;\n      }\n    }\n  }\n\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    addAll: createStateOperator(addAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter, IdSelector, Update } from './models';\nimport { createStateOperator } from './state_adapter';\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nexport function createUnsortedStateAdapter<T>(\n  selectId: IdSelector<T>\n): EntityStateAdapter<T> {\n  type R = EntityState<T>;\n/**\n * @param {?} entity\n * @param {?} state\n * @return {?}\n */\nfunction addOneMutably(entity: T, state: R): void {\n    const /** @type {?} */ key = selectId(entity);\n    const /** @type {?} */ index = state.ids.indexOf(key);\n\n    if (index !== -1) {\n      return;\n    }\n\n    state.ids.push(key);\n    state.entities[key] = entity;\n  }\n/**\n * @param {?} entities\n * @param {?} state\n * @return {?}\n */\nfunction addManyMutably(entities: T[], state: R): void {\n    for (let /** @type {?} */ index in entities) {\n      addOneMutably(entities[index], state);\n    }\n  }\n/**\n * @param {?} entities\n * @param {?} state\n * @return {?}\n */\nfunction addAllMutably(entities: T[], state: R): void {\n    state.ids = [];\n    state.entities = {};\n\n    addManyMutably(entities, state);\n  }\n/**\n * @param {?} key\n * @param {?} state\n * @return {?}\n */\nfunction removeOneMutably(key: string, state: R): void {\n    const /** @type {?} */ index = state.ids.indexOf(key);\n\n    if (index === -1) {\n      return;\n    }\n\n    state.ids.splice(index, 1);\n    delete state.entities[key];\n  }\n/**\n * @param {?} keys\n * @param {?} state\n * @return {?}\n */\nfunction removeManyMutably(keys: string[], state: R): void {\n    for (let /** @type {?} */ index in keys) {\n      removeOneMutably(keys[index], state);\n    }\n  }\n/**\n * @template S\n * @param {?} state\n * @return {?}\n */\nfunction removeAll<S extends R>(state: S): S {\n    return Object.assign({}, state, {\n      ids: [],\n      entities: {},\n    });\n  }\n/**\n * @param {?} update\n * @param {?} state\n * @return {?}\n */\nfunction updateOneMutably(update: Update<T>, state: R): void {\n    const /** @type {?} */ index = state.ids.indexOf(update.id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const /** @type {?} */ original = state.entities[update.id];\n    const /** @type {?} */ updated: T = Object.assign({}, original, update.changes);\n    const /** @type {?} */ newKey = selectId(updated);\n\n    if (newKey !== update.id) {\n      state.ids[index] = newKey;\n      delete state.entities[update.id];\n    }\n\n    state.entities[newKey] = updated;\n  }\n/**\n * @param {?} updates\n * @param {?} state\n * @return {?}\n */\nfunction updateManyMutably(updates: Update<T>[], state: R): void {\n    for (let /** @type {?} */ index in updates) {\n      updateOneMutably(updates[index], state);\n    }\n  }\n\n  return {\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    addAll: createStateOperator(addAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter } from './models';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nexport function createStateOperator<V, R>(\n  mutator: (arg: R, state: EntityState<V>) => void\n) {\n  return function operation<S extends EntityState<V>>(arg: R, state: S): S {\n    const /** @type {?} */ clonedEntityState: EntityState<V> = {\n      ids: [...state.ids],\n      entities: { ...state.entities },\n    };\n\n    mutator(arg, clonedEntityState);\n\n    return Object.assign({}, state, clonedEntityState);\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { EntityState, EntitySelectors } from './models';\n/**\n * @template T\n * @return {?}\n */\nexport function createSelectorsFactory<T>() {\n  return {\n/**\n * @template V\n * @param {?} selectState\n * @return {?}\n */\ngetSelectors<V>(\n      selectState: (state: V) => EntityState<T>\n    ): EntitySelectors<T, V> {\n      const /** @type {?} */ selectIds = (state: EntityState<T>) => state.ids;\n      const /** @type {?} */ selectEntities = (state: EntityState<T>) => state.entities;\n      const /** @type {?} */ selectAll = createSelector(\n        selectIds,\n        selectEntities,\n        (ids, entities) => ids.map(id => entities[id])\n      );\n\n      const /** @type {?} */ selectTotal = createSelector(selectIds, ids => ids.length);\n\n      return {\n        selectIds: createSelector(selectState, selectIds),\n        selectEntities: createSelector(selectState, selectEntities),\n        selectAll: createSelector(selectState, selectAll),\n        selectTotal: createSelector(selectState, selectTotal),\n      };\n    },\n  };\n}\n","import { EntityState } from './models';\n/**\n * @template V\n * @return {?}\n */\nexport function getInitialEntityState<V>(): EntityState<V> {\n  return {\n    ids: [],\n    entities: {},\n  };\n}\n/**\n * @template V\n * @return {?}\n */\nexport function createInitialStateFactory<V>() {\n  function getInitialState(): EntityState<V>;\n  function getInitialState<S extends object>(\n    additionalState: S\n  ): EntityState<V> & S;\n/**\n * @param {?=} additionalState\n * @return {?}\n */\nfunction getInitialState(additionalState: any = {}): any {\n    return Object.assign(getInitialEntityState(), additionalState);\n  }\n\n  return { getInitialState };\n}\n"],"names":[],"mappings":"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"}